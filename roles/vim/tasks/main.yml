---
- name: add ppa
  apt_repository:
    repo: ppa:neovim-ppa/stable
    state: present
  become: true
  when: ansible_os_family == 'Debian'

- name: install deps for debian
  package:
    state: latest
    name:
      - neovim
      - python
      - python-virtualenv
      - python3
      - python3-venv
      - shellcheck
  become: true
  when: ansible_os_family == 'Debian'
  tags:
    - skip_ansible_lint

- name: install deps for alpine
  package:
    state: latest
    name:
      - gcc
      - musl-dev
      - neovim
      - py2-virtualenv
      - python2
      - python2-dev
      - python3
      - python3-dev
  become: true
  when: ansible_os_family == 'Alpine'
  tags:
    - skip_ansible_lint

- name: remove files
  file:
    path={{ item }}
    state=absent
  with_items:
    - /home/{{ ansible_user_id }}/.vimrc
    - /home/{{ ansible_user_id }}/.vim
    - /home/{{ ansible_user_id }}/.config/nvim
  become: true

- name: needed dirs
  file:
    path={{ item }}
    state=directory
  with_items:
    - ~/.vim
    - ~/.vim/autoload
    - ~/.vim/colors
    - ~/.vim/plugged
    - ~/.vim/spell
    - ~/.vim/thesaurus
    - ~/.config

- name: link files
  file:
    src={{ item.src }}
    dest={{ item.dest }}
    state=link
  with_items:
    - {'src': '{{ batcave_path }}/roles/vim/files/vimrc', 'dest': '~/.vimrc'}
    - {'src': '~/.vim', 'dest': '~/.config/nvim'}
    - {'src': '~/.vimrc', 'dest': '~/.config/nvim/init.vim'}

- name: get some files
  get_url:
    url={{ item.src }}
    dest={{ item.dest }}
  with_items:
    - {'src': 'http://ftp.vim.org/pub/vim/runtime/spell/de.utf-8.spl', 'dest': '~/.vim/spell/de.utf-8.spl'}
    - {'src': 'http://ftp.vim.org/pub/vim/runtime/spell/en.utf-8.spl', 'dest': '~/.vim/spell/en.utf-8.spl'}
    - {'src': 'https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim', 'dest': '~/.vim/autoload/plug.vim'}

- name: install dracula
  git:
    repo: https://github.com/dracula/vim.git
    dest: ~/.vim/plugged/dracula

- name: create neovim virtualenv for python2
  pip:
    name:
      - neovim
    virtualenv: /opt/neovim2
    state: latest
  become: true

- name: create neovim virtualenv for python3
  pip:
    name:
      - jedi
      - neovim
      - pynvim
    virtualenv: /opt/neovim3
    virtualenv_command: /usr/bin/python3 -m venv
    state: latest
  become: true

- name: install plugins
  command: nvim +PlugInstall +qall
  tags:
    - skip_ansible_lint

- name: needed python packages
  pipx:
    name: "{{ item }}"
    state: latest
  loop:
    - ansible-lint
    - python-language-server
    - yamllint

- name: needed nix packages
  nix:
    name: "{{ item }}"
    state: latest
  loop:
    - LanguageTool
