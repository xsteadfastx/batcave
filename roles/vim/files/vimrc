" ---------------------------------------
" GENERAL
" ---------------------------------------

set shell=/bin/bash
set nocompatible
filetype off
set enc=utf-8
set fenc=utf-8
set fileencoding=utf-8
filetype plugin indent on


" ---------------------------------------
" PLUGINS
" ---------------------------------------

call plug#begin('~/.vim/plugged')
"Plug 'Rykka/riv.vim'
"Plug 'Shougo/neocomplete'
"Plug 'SirVer/ultisnips'
"Plug 'godlygeek/tabular'
"Plug 'honza/vim-snippets'
"Plug 'jiangmiao/auto-pairs'
"Plug 'klen/python-mode'
"Plug 'nvie/vim-flake8'
"Plug 'vim-scripts/indentpython.vim'
Plug 'ConradIrwin/vim-bracketed-paste'
Plug 'Konfekt/FastFold'
Plug 'MicahElliott/Rocannon', { 'for': 'yaml' }
Plug 'Yggdroot/indentLine'
Plug 'airblade/vim-gitgutter'
Plug 'alfredodeza/pytest.vim', { 'for': 'python' }
Plug 'blindFS/vim-taskwarrior', { 'on': 'TW' }
Plug 'chrisbra/Colorizer'
Plug 'cohama/lexima.vim'
Plug 'davidhalter/jedi-vim', { 'for': 'python' }
Plug 'ekalinin/Dockerfile.vim', { 'for': 'Dockerfile' }
Plug 'elzr/vim-json', { 'for': 'json' }
Plug 'ervandew/supertab'
Plug 'hynek/vim-python-pep8-indent', { 'for': 'python' }
Plug 'jelera/vim-javascript-syntax', { 'for': 'javascript' }
Plug 'junegunn/goyo.vim'
Plug 'lepture/vim-jinja'
Plug 'mattn/emmet-vim', { 'for': 'html' }
Plug 'mattn/gist-vim'
Plug 'mattn/webapi-vim'
Plug 'mhinz/vim-grepper'
Plug 'ntpeters/vim-better-whitespace'
Plug 'pangloss/vim-javascript', { 'for': 'javascript' }
Plug 'plasticboy/vim-markdown', { 'for': 'markdown' }
Plug 'reedes/vim-pencil'
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'scrooloose/syntastic'
Plug 'tmhedberg/SimpylFold'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-git'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'vimwiki/vimwiki'
call plug#end()


" ---------------------------------------
" UI
" ---------------------------------------

set nonumber
set backspace=2
set laststatus=2
set foldenable
syntax on
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
au InsertLeave * match ExtraWhitespace /\s\+$/
set background=dark
set t_Co=256
colorscheme solarized
"hi Normal ctermbg=none " transparent background
let python_highlight_all=1
set listchars=trail:·,precedes:«,extends:»,nbsp:~,tab:▸\ 
set list


" ---------------------------------------
" TEXT FORMAT
" ---------------------------------------

set autoindent
set smartindent
set nowrap
set expandtab
set nosmarttab

" automatically remove trail. whitespace at write
"au BufWritePre <buffer> StripWhitespace


" ---------------------------------------
" KEYMAPS
" ---------------------------------------

let mapleader = ","
let maplocalleader = "\\"

" fixes some strange arrow errors in insert mode
imap ^[OA <ESC>kli
imap ^[OB <ESC>jli
imap ^[OC <ESC>lli
imap ^[OD <ESC>hli

map <C-n> :NERDTreeToggle<CR> " open nerdtree

vnoremap < <gv " better indentation
vnoremap > >gv " better indentation

nmap <silent><Leader>p <Esc>:Pytest project<CR>
nmap <silent><Leader>f <Esc>:Pytest function<CR>

" vim-repeat
silent! call repeat#set("\<Plug>MyWonderfulMap", v:count)

" force tab
inoremap <S-Tab> <C-V><Tab>


" ---------------------------------------
" PYTHON
" ---------------------------------------

augroup python
    autocmd!
    au BufRead,BufNewFile *.xsh set filetype=python
    au FileType python set colorcolumn=79
augroup end


" ---------------------------------------
" HTML
" ---------------------------------------

augroup html
    autocmd!
    au FileType html setl sw=2 ts=2 sts=2
    au FileType htmldjango setl sw=2 ts=2 sts=2
augroup end


" ---------------------------------------
" CSS
" ---------------------------------------

augroup css
    autocmd!
    au BufRead,BufNewFile *scss set filetype=css
    au FileType css setl tabstop=2 expandtab shiftwidth=2 softtabstop=2
                \ | ColorHighlight
augroup end


" ---------------------------------------
" JAVASCRIPT
" ---------------------------------------

augroup javascript
    autocmd!
    au FileType javascript setl tabstop=2 expandtab shiftwidth=2 softtabstop=2
augroup end


" ---------------------------------------
" PENCIL
" ---------------------------------------

let g:pencil#wrapModeDefault = 'soft'


" ---------------------------------------
" NEOVIM
" ---------------------------------------

if has('nvim')
    runtime! plugin/python_setup.vim
endif


" ---------------------------------------
" YAML
" ---------------------------------------

augroup yaml
    autocmd!
    au BufRead,BufNewFile *yml,*yaml set filetype=yaml
    au FileType yaml setl tabstop=2 expandtab shiftwidth=2 softtabstop=2
augroup end


" ---------------------------------------
" MARKDOWN / RST
" ---------------------------------------

augroup pencil
    autocmd!
    au BufRead,BufNewFile *.markdown,*.md set filetype=markdown
    au FileType markdown,mkd,rst call pencil#init()
                             \ | setl spell spelllang=de
                             \ | setl thesaurus+=~/.vim/thesaurus/openthesaurus.txt
                             \ | setl tabstop=4 expandtab shiftwidth=4 softtabstop=4
augroup end


" ---------------------------------------
" TASKWARRIOR
" ---------------------------------------

autocmd CursorHold task* call Timer()
function! Timer()
    call taskwarrior#list()
    set updatetime=5000
    call feedkeys("f\e") "retrigger the CursorHold event without major side-effects
endfunction


" ---------------------------------------
" SYNTASTIC
" ---------------------------------------

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_loc_list_height = 5


" ---------------------------------------
" SIMPLYFOLD
" ---------------------------------------

let g:SimpylFold_docstring_preview=1


" ---------------------------------------
" GIST
" ---------------------------------------

let g:gist_post_private = 1


" ---------------------------------------
" JSON
" ---------------------------------------
"
augroup json
    autocmd!
    au FileType json setl tabstop=2 expandtab shiftwidth=2 softtabstop=2
augroup end


" ---------------------------------------
" LEKTOR
" ---------------------------------------

augroup lektor
    autocmd!
    au BufRead,BufNewFile *.lr set filetype=markdown
augroup end
