" ---------------------------------------
" GENERAL
" ---------------------------------------

set shell=/bin/sh
set nocompatible
filetype off
set enc=utf-8
set fenc=utf-8
set fileencoding=utf-8
filetype plugin indent on


" ---------------------------------------
" PLUGINS
" ---------------------------------------

call plug#begin('~/.vim/plugged')

"Plug 'Rykka/riv.vim'
"Plug 'Shougo/neocomplete'
"Plug 'SirVer/ultisnips'
"Plug 'davidhalter/jedi-vim', { 'for': 'python' }
"Plug 'godlygeek/tabular'
"Plug 'honza/vim-snippets'
"Plug 'jiangmiao/auto-pairs'
"Plug 'klen/python-mode'
"Plug 'nvie/vim-flake8'
"Plug 'vim-scripts/indentpython.vim'

Plug 'ConradIrwin/vim-bracketed-paste'

Plug 'Konfekt/FastFold'

Plug 'MicahElliott/Rocannon', { 'for': 'yaml' }

Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
    let g:deoplete#enable_at_startup = 1

Plug 'zchee/deoplete-jedi'
    let g:deoplete#sources#jedi#show_docstring = 1

Plug 'airblade/vim-gitgutter'

Plug 'alfredodeza/pytest.vim', { 'for': 'python' }
    nmap <silent><Leader>p <Esc>:Pytest project<CR>
    nmap <silent><Leader>f <Esc>:Pytest function<CR>

Plug 'blindFS/vim-taskwarrior', { 'on': 'TW' }

Plug 'chrisbra/Colorizer'

Plug 'cohama/lexima.vim'

Plug 'ekalinin/Dockerfile.vim', { 'for': 'Dockerfile' }

Plug 'elzr/vim-json', { 'for': 'json' }

Plug 'ervandew/supertab'

Plug 'guns/xterm-color-table.vim'

Plug 'hdima/python-syntax'

Plug 'hynek/vim-python-pep8-indent', { 'for': 'python' }

"Plug 'itchyny/lightline.vim'
"    let g:lightline = {'colorscheme': 'solarized',}

" powerline
Plug 'vim-airline/vim-airline'
    let g:airline_powerline_fonts = 1
Plug 'vim-airline/vim-airline-themes'
    let g:airline_theme='solarized'

" nerd font in vim
Plug 'ryanoasis/vim-devicons'

Plug 'jelera/vim-javascript-syntax', { 'for': 'javascript' }

Plug 'junegunn/goyo.vim'

Plug 'junegunn/limelight.vim'
    let g:limelight_conceal_ctermfg = 'gray'
    let g:limelight_conceal_ctermfg = 240
    let g:limelight_default_coefficient = 0.7

Plug 'lepture/vim-jinja'

Plug 'mattn/emmet-vim', { 'for': 'html' }

Plug 'mattn/gist-vim'
    let g:gist_post_private = 1

Plug 'mattn/webapi-vim'

Plug 'mhinz/vim-grepper'

Plug 'nathanaelkane/vim-indent-guides'
    au VimEnter * :IndentGuidesEnable
    let g:indent_guides_start_level = 2
    let g:indent_guides_guide_size = 1

Plug 'ntpeters/vim-better-whitespace'

Plug 'pangloss/vim-javascript', { 'for': 'javascript' }

Plug 'plasticboy/vim-markdown', { 'for': 'markdown' }

Plug 'reedes/vim-pencil'
    let g:pencil#wrapModeDefault = 'soft'

Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
    map <C-n> :NERDTreeToggle<CR> " open nerdtree

Plug 'tmhedberg/SimpylFold'
    let g:SimpylFold_docstring_preview=1

Plug 'tpope/vim-fugitive'

Plug 'tpope/vim-git'

Plug 'tpope/vim-repeat'
    silent! call repeat#set("\<Plug>MyWonderfulMap", v:count)

Plug 'tpope/vim-surround'

Plug 'vimwiki/vimwiki'
    let g:vimwiki_list = [{'path': '~/Nextcloud/vimwiki/'}]

Plug 'w0rp/ale'
    let g:ale_python_mypy_options = '--silent-imports'
    let g:ale_fixers = {'python': ['isort'],}


" easy alignment
Plug 'junegunn/vim-easy-align'
    xmap ga <Plug>(EasyAlign)
    nmap ga <Plug>(EasyAlign)

" scratchpad
Plug 'metakirby5/codi.vim'

" fish syntax
Plug 'dag/vim-fish'

call plug#end()


" ---------------------------------------
" UI
" ---------------------------------------

set nonumber
set backspace=2
set laststatus=2
set foldenable
syntax on
set synmaxcol=120
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
au InsertLeave * match ExtraWhitespace /\s\+$/
set background=dark
set t_Co=256
colorscheme solarized
"hi Normal ctermbg=none " transparent background
let python_highlight_all=1
set listchars=trail:·,precedes:«,extends:»,nbsp:~,tab:▸\ 
set list
set cursorline

" disabled preview window
"set completeopt-=preview


" ---------------------------------------
" TEXT FORMAT
" ---------------------------------------

set autoindent
set smartindent
set nowrap
set expandtab
set nosmarttab

" automatically remove trail. whitespace at write
"au BufWritePre <buffer> StripWhitespace


" ---------------------------------------
" KEYMAPS
" ---------------------------------------

let mapleader = ","
let maplocalleader = "\\"

" fixes some strange arrow errors in insert mode
imap ^[OA <ESC>kli
imap ^[OB <ESC>jli
imap ^[OC <ESC>lli
imap ^[OD <ESC>hli

vnoremap < <gv " better indentation
vnoremap > >gv " better indentation

" force tab
inoremap <S-Tab> <C-V><Tab>

" navigation
tnoremap <A-h> <C-\><C-N><C-w>h
tnoremap <A-j> <C-\><C-N><C-w>j
tnoremap <A-k> <C-\><C-N><C-w>k
tnoremap <A-l> <C-\><C-N><C-w>l
inoremap <A-h> <C-\><C-N><C-w>h
inoremap <A-j> <C-\><C-N><C-w>j
inoremap <A-k> <C-\><C-N><C-w>k
inoremap <A-l> <C-\><C-N><C-w>l
nnoremap <A-h> <C-w>h
nnoremap <A-j> <C-w>j
nnoremap <A-k> <C-w>k
nnoremap <A-l> <C-w>l


" ---------------------------------------
" PYTHON
" ---------------------------------------

augroup python
    autocmd!
    au BufRead,BufNewFile *.xsh set filetype=python
    au FileType python set colorcolumn=79
augroup end


" ---------------------------------------
" HTML
" ---------------------------------------

augroup html
    autocmd!
    au FileType html setl sw=2 ts=2 sts=2
    au FileType htmldjango setl sw=2 ts=2 sts=2
augroup end


" ---------------------------------------
" CSS
" ---------------------------------------

augroup css
    autocmd!
    au BufRead,BufNewFile *scss set filetype=css
    au FileType css setl tabstop=2 expandtab shiftwidth=2 softtabstop=2
                \ | ColorHighlight
augroup end


" ---------------------------------------
" JAVASCRIPT
" ---------------------------------------

augroup javascript
    autocmd!
    au FileType javascript setl tabstop=2 expandtab shiftwidth=2 softtabstop=2
augroup end


" ---------------------------------------
" NEOVIM
" ---------------------------------------

if has('nvim')
    " needed for copy paste in neovim
    set clipboard+=unnamedplus

    " using venvs for python support in neovim
    let g:python_host_prog = '/opt/neovim2/bin/python'
    let g:python3_host_prog = '/opt/neovim3/bin/python'

    " somehow this is needed
    "unlet g:loaded_python3_provider
endif


" ---------------------------------------
" YAML
" ---------------------------------------

augroup yaml
    autocmd!
    au BufRead,BufNewFile *yml,*yaml set filetype=yaml
    au FileType yaml setl tabstop=2 expandtab shiftwidth=2 softtabstop=2
augroup end


" ---------------------------------------
" MARKDOWN / RST
" ---------------------------------------

augroup pencil
    autocmd!
    au BufRead,BufNewFile *.markdown,*.md set filetype=markdown
    au FileType markdown,mkd,rst call pencil#init()
                             \ | setl spell spelllang=de
                             \ | setl thesaurus+=~/.vim/thesaurus/openthesaurus.txt
                             \ | setl tabstop=4 expandtab shiftwidth=4 softtabstop=4
                             \ | setl syntax=off
    au User GoyoEnter Limelight
    au User GoyoLeave Limelight!
augroup end


" ---------------------------------------
" TASKWARRIOR
" ---------------------------------------

autocmd CursorHold task* call Timer()
function! Timer()
    call taskwarrior#list()
    set updatetime=5000
    call feedkeys("f\e") "retrigger the CursorHold event without major side-effects
endfunction


" ---------------------------------------
" JSON
" ---------------------------------------
"

augroup json
    autocmd!
    au FileType json setl tabstop=2 expandtab shiftwidth=2 softtabstop=2
augroup end


" ---------------------------------------
" LEKTOR
" ---------------------------------------

augroup lektor
    autocmd!
    au BufRead,BufNewFile *.lr set filetype=markdown
augroup end
