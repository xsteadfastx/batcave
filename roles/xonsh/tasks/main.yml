---
- include_vars : "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_os_family }}.yml"

- name: add deadsnakes ppa
  apt_repository:
    repo='ppa:fkrull/deadsnakes'
    state=present
  become: yes
  when:
    ansible_distribution == 'Ubuntu'

- name: add testing repo
  lineinfile:
    dest=/etc/apk/repositories
    line='@testing http://nl.alpinelinux.org/alpine/edge/testing'
    state=present
  when:
    ansible_distribution == 'Alpine'

- name: update cache
  apk:
    update_cache=yes
  when:
    ansible_distribution == 'Alpine'

- name: install deps
  package:
    name={{ item }}
    state=present
  become: yes
  with_items:
    - '{{ python3_package_name }}'
    - '{{ shell_package_name }}'
    - bash

- stat: path=~/.local/bin/pip
  register: pip

- name: download pip
  get_url:
    url=https://bootstrap.pypa.io/get-pip.py
    dest=/tmp
  when: pip.stat.exists == False

- name: install pip
  command: 'python3.5 /tmp/get-pip.py --user --force-reinstall'
  when: pip.stat.exists == False

- name: delete get-pip.py
  file:
    state=absent
    path=/tmp/get-pip.py
  when: pip.stat.exists == False

- name: set dash as default shell
  user:
    name={{ ansible_env.USER }}
    shell=/bin/dash
  become: yes
  when: ansible_os_family != 'Alpine'

- name: set dash as default shell
  replace:
    dest=/etc/passwd
    regexp='(^{{ ansible_user_id }}:.+:.+:.+:.+:.+:).+$'
    replace='\1/bin/dash'
  become: yes
  when: ansible_os_family == 'Alpine' and ansible_user_shell != '/bin/dash'

- name: set path
  lineinfile:
    dest=~/.profile
    line='export PATH=$PATH:$HOME/.local/bin'
    state=present
    backup=yes
    create=yes

- name: install python packages
  pip:
    name={{ item }}
    executable=~/.local/bin/pip
    extra_args='--user'
    state=latest
  with_items:
    - prompt_toolkit
    - pygments
    - xonsh
    - xonsh-apt_tabcomplete
    - xonsh-autoxsh
    - xonsh-docker_tabcomplete
    - xonsh-vox_tabcomplete

- name: link files
  file:
    src={{ batcave_path }}/roles/xonsh/files/{{ item.src }}
    dest={{ item.dest }}
    state=link
  with_items:
    - { 'src': 'xonshrc', 'dest': '~/.xonshrc' }
