import os
import re
import shutil

from xonsh.environ import git_dirty_working_directory


# PROMPT #################################

def _prompt():
    prompt = []
    prompt.append('{env_name:{} }')

    if 'SSH_CONNECTION' in os.environ:
        prompt.append('{GREEN}{user}@{INTENSE_WHITE}{hostname} ')

    prompt.append('{GREEN}{short_cwd}{branch_color}{curr_branch: {}}{NO_COLOR} ')
    prompt.append('{BOLD_GREEN}{prompt_end}{NO_COLOR} ')

    return ''.join(prompt)


$FORMATTER_DICT['branch_color'] = lambda: ('{BOLD_INTENSE_RED}'
                                           if git_dirty_working_directory(include_untracked=True)
                                           else '{BOLD_INTENSE_GREEN}')

$PROMPT = _prompt
$XONSH_COLOR_STYLE = 'monokai'
$MULTILINE_PROMPT = '`·.,¸,.·*¯`·.,¸,.·*¯'


# XONSH ENVIRONMENT VARIABLES ############

$BASH_COMPLETIONS = ['/etc/bash_completion.d', '/usr/share/bash-completion/completions']
$CASE_SENSITIVE_COMPLETIONS = False
$SHELL_TYPE = 'best'
$SUPPRESS_BRANCH_TIMEOUT_MESSAGE = True
$VC_BRANCH_TIMEOUT = 5


# OTHER ENVIRONMENT VARIABLES ############

$EDITOR = 'vim'
$LC_UID = re.findall(r'\d{4}', $(id).split(' ')[0])[0]


# ALIASES ################################

aliases['exec'] = aliases['xexec']
aliases['ll'] = 'ls -la'
aliases['tmux'] = 'tmux -2'

def _alias_mosh(args, stdin=None):
    """A function to use as alias to get mosh running.

    There is a strange problem with mosh and xonsh. I have to set $SHELL to
    /bin/bash before running it. It should work with this little hack.
    """
    os.environ['SHELL'] = '/bin/bash'
    args.insert(0, 'mosh')
    cmd = ' '.join(args)
    os.system(cmd)

aliases['mosh'] = _alias_mosh

def _alias_ssh(args, stdin=None):
    os.environ['TERM'] = 'xterm'
    args.insert(0, 'ssh')
    cmd = ' '.join(args)
    os.system(cmd)

aliases['ssh'] = _alias_ssh


# PATH ###################################

$PATH.extend(
    [
        $HOME + '/.local/bin',
        $HOME + '/miniconda3/bin',
        $HOME + '/node_modules_global/bin'
    ]
)


# XONTRIB ################################

xontrib autoxsh vox vox_tabcomplete

if shutil.which('apt-get'):
    xontrib apt_tabcomplete

if shutil.which('docker'):
    xontrib docker_tabcomplete
