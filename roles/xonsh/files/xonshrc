# vim: set ft=python:

import os
import re
import shutil


# XONSH ENVIRONMENT VARIABLES ############

$CASE_SENSITIVE_COMPLETIONS = False
$SHELL_TYPE = 'best'
$SUPPRESS_BRANCH_TIMEOUT_MESSAGE = True
$VC_BRANCH_TIMEOUT = 5
$XONSH_COLOR_STYLE = 'solarizeddark'


# OTHER ENVIRONMENT VARIABLES ############

$EDITOR = 'vim'
$LC_UID = re.findall(r'\d{1,4}', $(id).split(' ')[0])[0]


# ALIASES ################################

aliases['exec'] = aliases['xexec']
aliases['ll'] = 'ls -la'
aliases['tmux'] = 'tmux -2'

def _alias_tmux_gc(args, stdin=None):
    tmux list-sessions | grep -v attached | cut -d: -f1 |  xargs -t -n1 tmux kill-session -t

aliases['tmux-gc'] = _alias_tmux_gc


aliases['vim'] = 'nvim'

def _alias_mosh(args, stdin=None):
    """A function to use as alias to get mosh running.

    There is a strange problem with mosh and xonsh. I have to set $SHELL to
    /bin/dash before running it. It should work with this little hack.
    """
    os.environ['SHELL'] = '/bin/dash'
    args.insert(0, 'mosh')
    cmd = ' '.join(args)
    os.system(cmd)

aliases['mosh'] = _alias_mosh

def _alias_ssh(args, stdin=None):
    os.environ['TERM'] = 'xterm'
    args.insert(0, 'ssh')
    cmd = ' '.join(args)
    os.system(cmd)

aliases['ssh'] = _alias_ssh


# PATH ###################################

$PATH[0:0] = [
    $HOME + '/.local/bin',
    $HOME + '/.pyenv/shims',
    $HOME + '/.nix-profile/bin',
    $HOME + '/.nix-profile/sbin',
]


# XONTRIB ################################

xontrib load vox
xontrib load vox_tabcomplete
xontrib load powerline

if shutil.which('apt-get'):
    xontrib load apt_tabcomplete
